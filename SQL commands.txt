#SQL CheatSheet: 

CREATE DATABASE db1;

USE db1;

CREATE TABLE flights(
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	origin TEXT NOT NULL,
	destination TEXT NOT NULL,
	duration INTEGER NOT NULL);

SHOW TABLES;

SHOW COLUMNS FROM flights;


INSERT INTO flights (origin, destination, duration) VALUES ('Mashhad', 'Tehran', 25);
INSERT INTO flights (origin, destination, duration) VALUES ('Shiraz', 'Tabriz', 30);
INSERT INTO flights (origin, destination, duration) VALUES ('Tehran', 'Bandar Abbas', 35);

SELECT * FROM flights;

#ALTER TABLE - ADD Column

ALTER TABLE flights
ADD airline varchar(255);

#ALTER TABLE - DROP COLUMN

ALTER TABLE flights
DROP COLUMN airline;

#ALTER TABLE - ALTER/MODIFY DATATYPE

ALTER TABLE flights
MODIFY COLUMN origin CHAR(3);


SELECT origin, destination FROM flights WHERE origin = 'Mashhad';

.mode columns     #Show data in columns mode   
.headers yes      #Show headers (It shows to me even without calling this query)
.shell cls        #clear command screen


******************* Conditions *********************
SELECT * FROM flights WHERE duration > 500;
 
SELECT * FROM flights WHERE duration > 500 AND destination = 'Paris';

SELECT * FROM flights WHERE duration > 500 OR destination = 'Paris';

SELECT * FROM flights WHERE origin IN ('Tehran', 'Mashhad');

SELECT * FROM flights WHERE origin LIKE '%a%';    #An origin that has an 'a' whith zero or mroe chars
before and after it.

****************** Functions ***********************
Other Functions: *Average   *Count   *Max   *Min   *Sum

SELECT avg(duration) FROM flights;


**************** UPDATE ******************
UPDATE flights
	SET duration = 28 
	WHERE origin IN ('Tehran', 'Mashahd') AND destination IN ('Mashhad','Tehran');


*************** DELETE *******************
DELETE FROM flights WHERE destination = 'Tabriz';


************** Other Clauses *************
* LIMIT   *ORDER BY     *GROUP BY    *HAVING 

SELECT * FROM flights ORDER BY duration;   

SELECT * FROM flights ORDER BY duration LIMIT 10;           #Shows you Top 10 based on duration

SELECT * FROM flights GROUP BY origin;      #It shows just uique origins...

SELECT * FROM flights GROUP BY origin HAVING 3;      #HAVING works with GROUP BY 


****************** JOIN ************************
SELECT last_name, origin, destination FROM fleights JOIN passengers ON fleights.id = passengers.fleight_id;
# JOIN is equal to INNER JOIN (INNER JOIN is the sqlite preferred name) - Doesn't matter which one to use.

